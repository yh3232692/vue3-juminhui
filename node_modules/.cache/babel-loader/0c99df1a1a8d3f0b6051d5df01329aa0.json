{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\vue3-juminhui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\vue3-juminhui\\src\\https.js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\vue3-juminhui\\src\\https.js","mtime":1554974418774},{"path":"C:\\Users\\Administrator\\Desktop\\vue3-juminhui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue3-juminhui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\vue3-juminhui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport _JSON$stringify from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\vue3-juminhui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport axios from 'axios';\nimport { MessageBox, Indicator } from 'mint-ui';\naxios.defaults.timeout = 5000;\naxios.defaults.baseURL = 'https://cshop.jminhui.com/Api/'; //http request 拦截器\n\naxios.interceptors.request.use(function (config) {\n  // const token = getCookie('名称');注意使用的时候需要引入cookie方法，推荐js-cookie\n  config.data = _JSON$stringify(config.data);\n  config.headers = {\n    'Content-Type': 'application/x-www-form-urlencoded' // if(token){\n    //   config.params = {'token':token}\n    // }\n\n  };\n  Indicator.open({\n    text: '加载中,请稍后...',\n    spinnerType: 'fading-circle'\n  });\n  return config;\n}, function (error) {\n  MessageBox.alert('数据加载超时,请检查您的网络或稍后重试!').then(function (action) {\n    Indicator.close();\n  });\n  return _Promise.reject(err);\n}); //http response 拦截器\n\naxios.interceptors.response.use(function (response) {\n  // if(response.data.errCode ==2){\n  //     router.push({\n  //         path:\"/login\",\n  //         querry:{redirect:router.currentRoute.fullPath}//从哪个页面跳转\n  //     })\n  // }\n  console.log('=============亲，数据包回来了=============');\n  console.log(response);\n  console.log('=========================================');\n  Indicator.close();\n  return response;\n}, function (error) {\n  MessageBox.alert('数据加载失败!').then(function (action) {\n    Indicator.close();\n  });\n  return _Promise.reject(error);\n});\n/**\r\n * 封装get方法\r\n * @param url\r\n * @param data\r\n * @returns {Promise}\r\n */\n\nexport function fetch(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new _Promise(function (resolve, reject) {\n    axios.get(url, {\n      params: params\n    }).then(function (response) {\n      resolve(response.data);\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n}\n/**\r\n * 封装post请求\r\n * @param url\r\n * @param data\r\n * @returns {Promise}\r\n */\n\nexport function post(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new _Promise(function (resolve, reject) {\n    axios.post(url, data).then(function (response) {\n      resolve(response.data);\n    }, function (err) {\n      reject(err);\n    });\n  });\n}",{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\vue3-juminhui\\src\\https.js"],"names":["axios","MessageBox","Indicator","defaults","timeout","baseURL","interceptors","request","use","config","data","headers","open","text","spinnerType","error","alert","then","action","close","reject","err","response","console","log","fetch","url","params","resolve","get","catch","post"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAoBC,SAApB,QAAqC,SAArC;AAEAF,KAAK,CAACG,QAAN,CAAeC,OAAf,GAAyB,IAAzB;AACAJ,KAAK,CAACG,QAAN,CAAeE,OAAf,GAAwB,gCAAxB,C,CAEA;;AACAL,KAAK,CAACM,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACI,UAAAC,MAAM,EAAI;AACN;AACAA,EAAAA,MAAM,CAACC,IAAP,GAAc,gBAAeD,MAAM,CAACC,IAAtB,CAAd;AACAD,EAAAA,MAAM,CAACE,OAAP,GAAiB;AACb,oBAAe,mCADF,CAGjB;AACA;AACA;;AALiB,GAAjB;AAMAT,EAAAA,SAAS,CAACU,IAAV,CAAe;AACXC,IAAAA,IAAI,EAAE,YADK;AAEXC,IAAAA,WAAW,EAAE;AAFF,GAAf;AAIA,SAAOL,MAAP;AAEH,CAhBL,EAiBI,UAAAM,KAAK,EAAI;AACLd,EAAAA,UAAU,CAACe,KAAX,CAAiB,sBAAjB,EAAyCC,IAAzC,CAA8C,UAAAC,MAAM,EAAI;AACpDhB,IAAAA,SAAS,CAACiB,KAAV;AACH,GAFD;AAGA,SAAO,SAAQC,MAAR,CAAeC,GAAf,CAAP;AACH,CAtBL,E,CA0BA;;AACArB,KAAK,CAACM,YAAN,CAAmBgB,QAAnB,CAA4Bd,GAA5B,CACI,UAAAc,QAAQ,EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACAtB,EAAAA,SAAS,CAACiB,KAAV;AACA,SAAOG,QAAP;AACH,CAbL,EAcI,UAAAP,KAAK,EAAI;AACLd,EAAAA,UAAU,CAACe,KAAX,CAAiB,SAAjB,EAA4BC,IAA5B,CAAiC,UAAAC,MAAM,EAAI;AACvChB,IAAAA,SAAS,CAACiB,KAAV;AACH,GAFD;AAGA,SAAO,SAAQC,MAAR,CAAeL,KAAf,CAAP;AACH,CAnBL;AAsBA;;;;;;;AAOA,OAAO,SAASU,KAAT,CAAeC,GAAf,EAA6B;AAAA,MAAVC,MAAU,uEAAH,EAAG;AAChC,SAAO,aAAY,UAACC,OAAD,EAASR,MAAT,EAAoB;AACnCpB,IAAAA,KAAK,CAAC6B,GAAN,CAAUH,GAAV,EAAc;AACVC,MAAAA,MAAM,EAACA;AADG,KAAd,EAGCV,IAHD,CAGM,UAAAK,QAAQ,EAAI;AACdM,MAAAA,OAAO,CAACN,QAAQ,CAACZ,IAAV,CAAP;AACH,KALD,EAMCoB,KAND,CAMO,UAAAT,GAAG,EAAI;AACVD,MAAAA,MAAM,CAACC,GAAD,CAAN;AACH,KARD;AASH,GAVM,CAAP;AAWH;AAGD;;;;;;;AAOA,OAAO,SAASU,IAAT,CAAcL,GAAd,EAA4B;AAAA,MAAVhB,IAAU,uEAAH,EAAG;AAC/B,SAAO,aAAY,UAACkB,OAAD,EAASR,MAAT,EAAoB;AACnCpB,IAAAA,KAAK,CAAC+B,IAAN,CAAWL,GAAX,EAAehB,IAAf,EACKO,IADL,CACU,UAAAK,QAAQ,EAAI;AACdM,MAAAA,OAAO,CAACN,QAAQ,CAACZ,IAAV,CAAP;AACH,KAHL,EAGM,UAAAW,GAAG,EAAI;AACLD,MAAAA,MAAM,CAACC,GAAD,CAAN;AACH,KALL;AAMH,GAPM,CAAP;AAQH","sourcesContent":["import axios from 'axios';\r\nimport { MessageBox,Indicator } from 'mint-ui'; \r\n\r\naxios.defaults.timeout = 5000;\r\naxios.defaults.baseURL ='https://cshop.jminhui.com/Api/';\r\n\r\n//http request 拦截器\r\naxios.interceptors.request.use(\r\n    config => {\r\n        // const token = getCookie('名称');注意使用的时候需要引入cookie方法，推荐js-cookie\r\n        config.data = JSON.stringify(config.data);\r\n        config.headers = {\r\n            'Content-Type':'application/x-www-form-urlencoded'\r\n        }\r\n        // if(token){\r\n        //   config.params = {'token':token}\r\n        // }\r\n        Indicator.open({\r\n            text: '加载中,请稍后...',\r\n            spinnerType: 'fading-circle'\r\n        });\r\n        return config;\r\n        \r\n    },\r\n    error => {\r\n        MessageBox.alert('数据加载超时,请检查您的网络或稍后重试!').then(action => {\r\n            Indicator.close();\r\n        });\r\n        return Promise.reject(err);\r\n    }\r\n);\r\n\r\n\r\n//http response 拦截器\r\naxios.interceptors.response.use(\r\n    response => {\r\n        // if(response.data.errCode ==2){\r\n        //     router.push({\r\n        //         path:\"/login\",\r\n        //         querry:{redirect:router.currentRoute.fullPath}//从哪个页面跳转\r\n        //     })\r\n        // }\r\n        console.log('=============亲，数据包回来了=============')\r\n        console.log(response)\r\n        console.log('=========================================')\r\n        Indicator.close();\r\n        return response;\r\n    },\r\n    error => {\r\n        MessageBox.alert('数据加载失败!').then(action => {\r\n            Indicator.close();\r\n        });\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\n/**\r\n * 封装get方法\r\n * @param url\r\n * @param data\r\n * @returns {Promise}\r\n */\r\n\r\nexport function fetch(url,params={}){\r\n    return new Promise((resolve,reject) => {\r\n        axios.get(url,{\r\n            params:params\r\n        })\r\n        .then(response => {\r\n            resolve(response.data);\r\n        })\r\n        .catch(err => {\r\n            reject(err)\r\n        })\r\n    })\r\n}\r\n  \r\n  \r\n/**\r\n * 封装post请求\r\n * @param url\r\n * @param data\r\n * @returns {Promise}\r\n */\r\n  \r\nexport function post(url,data = {}){\r\n    return new Promise((resolve,reject) => {\r\n        axios.post(url,data)\r\n            .then(response => {\r\n                resolve(response.data);\r\n            },err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n  \r\n\r\n"]}]}